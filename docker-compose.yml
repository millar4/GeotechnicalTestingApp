version: "3.8"

services:
  restore:
    image: mysql:8
    container_name: RestoreBackup
    volumes:
      - mysql_data:/var/lib/mysql       # Target volume
      - ./local_backups:/backup         # Where backups live on host
      - ./backend/database/src/backups/restore_backup.sh:/restore.sh:ro
    entrypoint: [ "sh", "-c", "sleep 3 && sh /restore.sh" ]
    restart: "no"


  mysql:
    image: mysql:8
    container_name: GeoTechnicalDatabase
    environment:
      MYSQL_DATABASE: GeotechnicalTests
      MYSQL_USER: myuser
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "4000:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/database.sql:/docker-entrypoint-initdb.d/database.sql:ro
      - ./backend/database/src/csv:/var/lib/mysql-files
    depends_on:
      restore:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    container_name: GeoTechnicalApp
    build:
      context: .
      dockerfile: ./backend/database/Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://GeoTechnicalDatabase:3306/GeotechnicalTests
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
    ports:
      - "8080:8080"

  frontend:
    container_name: GeoTechnicalFrontend
    build:
      context: ./frontend
    ports:
      - "3100:3000"
    environment:
      - REACT_APP_API_URL=http://GeoTechnicalApp:8080
    depends_on:
      - app

volumes:
  mysql_data:
